# -*- coding: utf-8 -*-
"""phase 3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vvm_W-7-77QNwJWY5oEwTS3ODUCSvAyC
"""

# ✅ Step 1: Install Required Libraries (if not already installed)
!pip install pandas scikit-learn matplotlib seaborn --quiet

# ✅ Step 2: Import Libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# ✅ Step 3: Load Dataset (using a sample Diabetes dataset)
url = "https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv"
df = pd.read_csv(url)

# ✅ Step 4: Explore Dataset
print("Dataset Preview:")
print(df.head())
print("\nSummary Statistics:")
print(df.describe())

# ✅ Step 5: Check for Missing Values
print("\nMissing values:\n", df.isnull().sum())

# ✅ Step 6: Prepare Data
X = df.drop("Outcome", axis=1)  # Features
y = df["Outcome"]              # Labels (0 = No Diabetes, 1 = Diabetes)

# ✅ Step 7: Split Data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# ✅ Step 8: Train Model (Random Forest)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# ✅ Step 9: Predict
y_pred = model.predict(X_test)

# ✅ Step 10: Evaluate Model
print("\n✅ Accuracy Score:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# ✅ Confusion Matrix
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt="d", cmap="Blues")
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()

# ✅ Step 11: Make a Sample Prediction
sample_input = np.array([[6,148,72,35,0,33.6,0.627,50]])  # Replace with your own patient data
sample_prediction = model.predict(sample_input)
print("\nPrediction for sample input:", "Diabetic" if sample_prediction[0] == 1 else "Not Diabetic")